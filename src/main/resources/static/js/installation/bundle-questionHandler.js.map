{"version":3,"file":"installation\\bundle-questionHandler.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://team-5-integration-4/./src/main/js/util/csrf.js","webpack://team-5-integration-4/webpack/bootstrap","webpack://team-5-integration-4/webpack/runtime/define property getters","webpack://team-5-integration-4/webpack/runtime/hasOwnProperty shorthand","webpack://team-5-integration-4/webpack/runtime/make namespace object","webpack://team-5-integration-4/./src/main/js/installation/questionHandler.js"],"sourcesContent":["export const header = document.querySelector('meta[name=\"_csrf_header\"]').content;\r\nexport const token = document.querySelector('meta[name=\"_csrf\"]').content;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {header, token} from \"../util/csrf.js\";\r\nlet isCircular\r\n\r\nvar isCircularExists = document.getElementById(\"minUser\");\r\n\r\ndocument.getElementById(\"submit\").style.visibility = \"hidden\"\r\nlet currentIndex = 0;\r\nif (isCircularExists !== null) {\r\n    isCircular = true\r\n    document.getElementById(\"minUser\").addEventListener(\"click\", minUser);\r\n    document.getElementById(\"plusUser\").addEventListener(\"click\", plusUser);\r\n    document.getElementById(\"nextButton\").classList.remove(\"btn-secondary\")\r\n    document.getElementById(\"nextButton\").classList.add(\"btn-primary\")\r\n} else {\r\n    isCircular = false\r\n}\r\n\r\ndocument.getElementById(\"submit\").addEventListener(\"click\", submitAnswer);\r\ndocument.getElementById(\"nextButton\").addEventListener(\"click\", moveToNextQuestion);\r\ndocument.getElementById(\"backButton\").addEventListener(\"click\", moveToPreviousQuestion);\r\ndocument.getElementById(\"pauseButton\").addEventListener(\"click\", togglePause);\r\nconst userCount = document.getElementById(\"userCount\")\r\nlet queue = 0\r\n\r\nfunction minUser(){\r\n    if (queue>0){\r\n        queue--\r\n    }\r\n    userCount.innerText = \"There are/is \" + queue + \" people in the queue.\"\r\n}\r\n\r\nfunction plusUser(){\r\n    if (queue < 15) {\r\n        queue++\r\n    }\r\n    userCount.innerHTML = \"There are/is \" + queue + \" people in the queue.\"\r\n\r\n}\r\n\r\nvar elapsedTime =0\r\nvar seconds =0\r\nlet minSeconds = 0\r\n\r\n// Start time when the page loads\r\nvar startTime = new Date().getTime();\r\n\r\nfunction trackTime() {\r\n\r\n    // Function to calculate and display time spent\r\n\r\n    displayTime()\r\n    // Update time every second\r\n    timerInterval = setInterval(displayTime, 1000);\r\n}\r\n\r\n// Call trackTime() when the page loads\r\ntrackTime();\r\nfunction displayTime() {\r\n    var currentTime = new Date().getTime();\r\n    elapsedTime = currentTime - startTime;\r\n    elapsedTime -= minSeconds\r\n    seconds = Math.floor(elapsedTime / 1000);\r\n    var minutes = Math.floor(seconds / 60);\r\n\r\n    var secondsTodisplay =  seconds % 60;\r\n    // Display time on the page\r\n    document.getElementById(\"timer\").innerHTML = \"Time spent on the page: \" + minutes + \"m \" + secondsTodisplay + \"s\";\r\n}\r\n\r\n\r\n// JavaScript to toggle between pause and resume states\r\nvar paused = false; // Initially, page is not paused\r\nvar timerInterval\r\n// Function to toggle pause state and update button\r\nvar startPause\r\nfunction togglePause() {\r\n    paused = !paused; // Toggle pause state\r\n\r\n    // Update button text and icon based on pause state\r\n    var button = document.getElementById(\"pauseButton\");\r\n    const textArea = document.getElementById(\"notesField\")\r\n    const form = document.getElementById(\"questionForm\")\r\n\r\n    if (paused) {\r\n        // Page is paused\r\n        startPause = new Date().getTime();\r\n        button.innerHTML = '';\r\n        button.innerHTML = '<i class=\"fas fa-play\"></i>';\r\n        document.getElementById(\"blockedOverlay\").style.display = \"block\"; // Display the overlay\r\n        form.style.display = \"none\"\r\n        textArea.style.display = \"block\"\r\n        clearInterval(timerInterval)\r\n    } else {\r\n        // Page is resumed\r\n        var endPause = new Date().getTime();\r\n        button.innerHTML = ''\r\n        button.innerHTML = '<i class=\"fas fa-pause\"></i>';\r\n        document.getElementById(\"blockedOverlay\").style.display = \"none\"; // Dont display the overlay\r\n        minSeconds = endPause - startPause + minSeconds\r\n        form.style.display = \"block\"\r\n        textArea.style.display = \"none\"\r\n\r\n        timerInterval = setInterval(displayTime, 1000);\r\n    }\r\n\r\n    // Perform other actions related to pausing or resuming the page\r\n    // For example, you can pause or resume certain functionality here\r\n}\r\n\r\n\r\n\r\nvar questionDivs = document.querySelectorAll('div[id*=question]');\r\n\r\nfor (let i = 0; i < questionDivs.length; i++) {\r\n    let questionNr = document.getElementById(\"question\"+i)\r\n    let questionId = questionNr.querySelector(\"h2\").id.split(\"_\")[1]\r\n    // Determine answer based on question type\r\n\r\n}\r\nwindow.onload = function () {\r\n    questionDivs.forEach(function(div) {\r\n        // Check if the div's ID is \"question0\"\r\n        if (div.id === 'question0') {\r\n            // If it is, show the div\r\n            div.style.display = 'block';\r\n        } else if (div.id.includes(\"question\")) {\r\n            // If not, hide the div\r\n            div.style.display = 'none';\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n// Function to handle submitting answers\r\nfunction submitAnswer(event) {\r\n    if (event != null) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    let answers = \"\"\r\n    let questions = \"\"\r\n\r\n    if (!isCircular) {\r\n        for (let i = 0; i < questionDivs.length; i++) {\r\n            let answer;\r\n            let question = document.getElementById(\"question_\" + i).textContent;\r\n            let questionNr = document.getElementById(\"question\" + i)\r\n            let questionId = questionNr.querySelector(\"h2\").id.split(\"_\")[1]\r\n\r\n            let answerName = \"answer\" + i\r\n            switch (questionNr.querySelector(\"div\").querySelector(\"div\").id) {\r\n                case \"open\":\r\n                    answer = document.getElementById(answerName).value\r\n                    break\r\n                case \"multipleChoice\":\r\n                    answer = \"\"\r\n                    const s = document.querySelectorAll('input[name=' + answerName + ']:checked')\r\n                    for (let sElement of s) {\r\n                        answer += sElement.value\r\n                        answer += \", \"\r\n                    }\r\n\r\n                    answer = answer.slice(0, -2); // Delete last two characters\r\n                    break\r\n                case \"range\":\r\n                    answer = document.getElementById(answerName).value;\r\n                    break\r\n                case \"singleChoice\":\r\n\r\n                    answer = document.querySelector('input[name=' + answerName + ']:checked').value\r\n                    break\r\n            }\r\n\r\n            answers += answer\r\n            answers += \" | \"\r\n            questions += questionId\r\n            questions += \" | \"\r\n        }\r\n    } else {\r\n        let answer;\r\n        let question = document.getElementById(\"question_\" + currentIndex).textContent;\r\n        let questionNr = document.getElementById(\"question\" + currentIndex)\r\n        let questionId = questionNr.querySelector(\"h2\").id.split(\"_\")[1]\r\n\r\n        let answerName = \"answer\" + currentIndex\r\n        switch (questionNr.querySelector(\"div\").querySelector(\"div\").id) {\r\n            case \"open\":\r\n                answer = document.getElementById(answerName).value\r\n                break\r\n            case \"multipleChoice\":\r\n                answer = \"\"\r\n                const s = document.querySelectorAll('input[name=' + answerName + ']:checked')\r\n                for (let sElement of s) {\r\n                    answer += sElement.value\r\n                    answer += \", \"\r\n                }\r\n\r\n                answer = answer.slice(0, -2); // Delete last two characters\r\n                break\r\n            case \"range\":\r\n                answer = document.getElementsByClassName('range').item(0).value;\r\n                break\r\n            case \"singleChoice\":\r\n                answer = document.querySelector('input[name=' + answerName + ']:checked').value\r\n                break\r\n        }\r\n\r\n        answers += answer\r\n        answers += \" | \"\r\n        questions += questionId\r\n        questions += \" | \"\r\n    }\r\n\r\n    const user = document.getElementById(\"userMail\").textContent\r\n\r\n    const textArea = document.getElementById(\"notesField\")\r\n    var urlParams = new URLSearchParams(window.location.search);\r\n\r\n    answers = answers.slice(0, -1); // Delete last character\r\n    questions = questions.slice(0, -1); // Delete last character\r\n    document.getElementById(\"questionForm\").reset()\r\n    // Get the value of the \"subThemeId\" parameter\r\n    var subtheme = urlParams.get(\"subThemeId\");\r\n    fetch(`/api/questions/submit`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            [header]: token\r\n        },\r\n        body: JSON.stringify({\r\n            question: questions,\r\n            answer: answers,\r\n            userMail: user,\r\n            subThemeId: subtheme,\r\n            durationSpend: seconds,\r\n            note: textArea.value\r\n        })\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(\"Answer submitted successfully.\");\r\n                if (!isCircular) {\r\n                    window.location.href = `/installation/flowCompleted`;\r\n                }\r\n            } else {\r\n                console.error(\"Failed to submit answer.\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n}\r\n\r\n\r\nfunction moveToNextQuestion() {\r\n    if (isCircular) {\r\n        submitAnswer()\r\n    }\r\n    if (queue === 0){\r\n        if (currentIndex < questionDivs.length - 1) {\r\n            currentIndex++;\r\n            showQuestion(currentIndex);\r\n\r\n        } else {\r\n            if (isCircular) {\r\n                currentIndex = 0\r\n                showQuestion(currentIndex)\r\n            }\r\n    }\r\n    } else {\r\n        minUser()\r\n    }\r\n\r\n    if (!isCircular && currentIndex === questionDivs.length-1){\r\n        document.getElementById(\"submit\").style.visibility = \"visible\"\r\n\r\n    }\r\n}\r\n\r\nfunction moveToPreviousQuestion() {\r\n    if(!isCircular) {\r\n        document.getElementById(\"submit\").style.visibility = \"hidden\"\r\n    }\r\n    if (currentIndex > 0) {\r\n        currentIndex--;\r\n        showQuestion(currentIndex);\r\n    }\r\n}\r\n\r\nfunction showQuestion(index) {\r\n\r\n    for (var i = 0; i < questionDivs.length; i++) {\r\n        questionDivs[i].style.display = 'none';\r\n    }\r\n    questionDivs[index].style.display = 'block';\r\n}\r\n\r\n// Range slider change event listener for all range inputs\r\nlet rangeInputs = document.getElementsByClassName('range');\r\n\r\nArray.from(rangeInputs).forEach(function(rangeInput) {\r\n    let rangeValue = rangeInput.nextElementSibling;\r\n    rangeInput.addEventListener(\"input\", function() {\r\n        if (rangeValue != null) {\r\n            rangeValue.textContent = \"Value: \" + rangeInput.value;\r\n        }\r\n    });\r\n});"],"names":[],"sourceRoot":""}