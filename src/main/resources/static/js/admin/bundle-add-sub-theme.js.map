{"version":3,"file":"admin\\bundle-add-sub-theme.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;;;;;;;;;ACDA;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN6C;AACE;;;;AAI/C;AACA,eAAe,4DAAiB;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA,+EAA+E,iDAAM,GAAG,gDAAK;AAC7F,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["webpack://team-5-integration-4/./src/main/js/util/csrf.js","webpack://team-5-integration-4/./src/main/js/utils.js","webpack://team-5-integration-4/webpack/bootstrap","webpack://team-5-integration-4/webpack/runtime/define property getters","webpack://team-5-integration-4/webpack/runtime/hasOwnProperty shorthand","webpack://team-5-integration-4/webpack/runtime/make namespace object","webpack://team-5-integration-4/./src/main/js/admin/add-sub-theme.js"],"sourcesContent":["export const header = document.querySelector('meta[name=\"_csrf_header\"]').content\nexport const token = document.querySelector('meta[name=\"_csrf\"]').content\n","export function extractIdsFromUrl(url, partOfUrl) {\n    // Used to extract the 2 id's that are in the link, needed to update entity\n\n    // Define the regular expression pattern to match IDs\n    const mainPattern = new RegExp('/(\\\\d+)/' + partOfUrl + '/(\\\\d+)')\n    const creatingPattern = new RegExp('/(\\\\d+)/' + partOfUrl + '/new')\n    const specialPattern = new RegExp('/' + partOfUrl + '/(\\\\d+)')\n    let match\n\n    // If match is found, extract the IDs\n    if ((match = url.match(mainPattern)) !== null) {\n        const firstId = match[1]\n        const secondId = match[2]\n        return [firstId, secondId]\n    } else if ((match = url.match(creatingPattern)) !== null) {\n        return match[1]\n    } else if ((match = url.match(specialPattern)) !== null) {\n        return match[1]\n    } else {\n        return null\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {header, token} from '../util/csrf.js'\nimport { extractIdsFromUrl } from '../utils.js' // Adjust the path as per your file structure\n\n\n\nconst createButton = document.getElementById('createButton')\nconst flowId = extractIdsFromUrl(window.location.href.substring(window.location.href), 'sub-theme')\n\ncreateButton.addEventListener('click', addNewSubTheme)\n\nasync function addNewSubTheme() {\n    const name = document.getElementById('nameInput').value\n    const information = document.getElementById('infoInput').value\n    await fetch('/api/sub-themes', {\n        method: 'POST', headers: {\n            'Accept': 'application/json', 'Content-Type': 'application/json', [header]: token\n        }, body: JSON.stringify({\n            name: name,\n            information: information,\n            flowId: flowId\n        })\n    })\n}\n"],"names":[],"sourceRoot":""}