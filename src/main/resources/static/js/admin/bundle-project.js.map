{"version":3,"file":"admin\\bundle-project.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;;;;;;;;;ACDA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN6C;AACA;AAC7C;AACA;AACA;AACA,gCAAgC,4DAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA,+EAA+E,iDAAM,GAAG,gDAAK;AAC7F,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA","sources":["webpack://team-5-integration-4/./src/main/js/util/csrf.js","webpack://team-5-integration-4/./src/main/js/utils.js","webpack://team-5-integration-4/webpack/bootstrap","webpack://team-5-integration-4/webpack/runtime/define property getters","webpack://team-5-integration-4/webpack/runtime/hasOwnProperty shorthand","webpack://team-5-integration-4/webpack/runtime/make namespace object","webpack://team-5-integration-4/./src/main/js/admin/project.js"],"sourcesContent":["export const header = document.querySelector('meta[name=\"_csrf_header\"]').content\r\nexport const token = document.querySelector('meta[name=\"_csrf\"]').content\r\n","export function extractIdsFromUrl(url, partOfUrl) {\r\n    // Used to extract the 2 id's that are in the link, needed to update entity\r\n\r\n    // Define the regular expression pattern to match IDs\r\n    const mainPattern = new RegExp('/(\\\\d+)/' + partOfUrl + '/(\\\\d+)')\r\n    const creatingPattern = new RegExp('/(\\\\d+)/' + partOfUrl + '/new')\r\n    const specialPattern = new RegExp('/' + partOfUrl + '/(\\\\d+)')\r\n    let match\r\n\r\n    // If match is found, extract the IDs\r\n    if ((match = url.match(mainPattern)) !== null) {\r\n        const firstId = match[1]\r\n        const secondId = match[2]\r\n        return [firstId, secondId]\r\n    } else if ((match = url.match(creatingPattern)) !== null) {\r\n        return match[1]\r\n    } else if ((match = url.match(specialPattern)) !== null) {\r\n        return match[1]\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {header, token} from '../util/csrf.js'\r\nimport {extractIdsFromUrl} from '../utils.js' // Adjust the path as per your file structure\r\n\r\nconst saveButton = document.getElementById('saveButton')\r\nconst deleteButton = document.getElementById('deleteButton')\r\nconst [platformId, projectId] = extractIdsFromUrl(window.location.href.substring(window.location.href), 'project')\r\n\r\nsaveButton.addEventListener('click', updateProject)\r\ndeleteButton.addEventListener('click', deleteProject)\r\n\r\nasync function updateProject(event) {\r\n    const name = document.getElementById('nameInput').value\r\n    const bgColor = document.getElementById('bgColorInput').value\r\n    const fontName = document.getElementById('fontNameInput').value\r\n    const logoUrl = document.getElementById('logoUrlInput').value\r\n    const isPublic = document.getElementById('isPublicInput').checked\r\n\r\n    console.log('Updating project')\r\n\r\n    const body = {\r\n        id: projectId, name: name, backgroundColorHex: bgColor, fontName: fontName, logoUrl: logoUrl, isPublic: isPublic\r\n    }\r\n\r\n    if (logoUrl) {\r\n        body.logoUrl = logoUrl;\r\n    }\r\n\r\n    fetch(`/api/projects/${projectId}`, {\r\n        method: 'PATCH', headers: {\r\n            'Accept': 'application/json', 'Content-Type': 'application/json', [header]: token\r\n        }, body: JSON.stringify(body)\r\n    })\r\n        .then(async (response) => {\r\n            if (response.status === 204) {\r\n                console.log('Project updated successfully');\r\n            } else {\r\n                console.error('Failed to update project');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error updating project:', error);\r\n        });\r\n}\r\n\r\n\r\nasync function deleteProject(event) {\r\n    console.log('Deleting project')\r\n    const response = await fetch(`/api/projects/${projectId}`, {\r\n        method: 'DELETE', headers: {\r\n            [header]: token\r\n        }\r\n    })\r\n    if (response.ok) {\r\n        window.history.back()\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}