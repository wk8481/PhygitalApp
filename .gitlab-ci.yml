image: larsdroid/jdk-gradle-node:21-8.7.0-20.12.1-alpine

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

include:
  - template: SAST.gitlab-ci.yml

stages:
  - build
  - test
  - deploy
  - destroy

# Cache configuration for dependencies
cache:
  paths:
    - .gradle/


build:
  stage: build
  script:
    - echo "JAVA_HOME is $JAVA_HOME"
    - java -version
    - echo "Build start..."
    - chmod +x ./gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - build/libs/Team_5_Phygital-0.0.1-SNAPSHOT.jar  # Specify the specific JAR file
    expire_in: 1 hour



test:
  stage: test
  script:
    - echo "Running JUnit tests"
    - chmod +x ./gradlew
    - ./gradlew test --scan
    - echo "SAST will run via the template"
  artifacts:
    reports:
      junit: build/test-results/**/*.xml

deploy:
  image: google/cloud-sdk:latest
  stage: deploy
  before_script:

    - echo "Setting up GCP Authentication..."
    - echo $GCP_SERVICE_KEY| tr -d '\n'| base64 -di > gcp-service-key.json
    - gcloud auth activate-service-account --key-file=gcp-service-key.json
    - gcloud config set project $PROJECT_ID
    - gcloud config set compute/zone $ZONE

    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - which nslookup || apt-get install dnsutils -y
    - "echo $(nslookup phygital-team5.duckdns.org | awk '/^Address: / { print $2 }') > ${HOME}/ip.txt"
    - IP_ADDRESS=$(cat ${HOME}/ip.txt)
    - if [ -z "$IP_ADDRESS" ]; then IP_ADDRESS="35.241.233.187"; fi
    - eval $(ssh-agent -s)
    - echo "$TEAM5_PRIV_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking accept-new\n\n" > ~/.ssh/config

  script:
    - echo "Uploading the application..."
    - chmod +x jarupload.sh
    - chmod +x deployjar.sh
    - chmod +x createDB.sh
    - ./jarupload.sh
    - sleep 10
    - echo "Uploaded successfully"
    - sleep 10
    - echo "Creating database..."
    - ./createDB.sh
    - sleep 10
    - echo "Database created successfully"
    - sleep 10
    - echo "Deploying the application..."
    - ./deployjar.sh
    - sleep 10
    - echo "Application starting.."
    - ssh $TEAM5_USER@$IP_ADDRESS "sudo systemctl start phygital.service"
    - echo "Application started successfully"
  when: manual
  environment:
    name: production
    url: https://phygital-team5.duckdns.org:8443
  only:
    refs:
      - main
  needs:
    - test

destroy:
  image: google/cloud-sdk:latest
  stage: destroy
  before_script:
    - echo "Setting up GCP Authentication..."
    - echo $GCP_SERVICE_KEY| tr -d '\n'| base64 -di > gcp-service-key.json
    - gcloud auth activate-service-account --key-file gcp-service-key.json
    - gcloud config set project $PROJECT_ID
    - gcloud config set compute/zone $ZONE

    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - which nslookup || apt-get install dnsutils -y
    - "echo $(nslookup phygital-team5.duckdns.org | awk '/^Address: / { print $2 }') > ${HOME}/ip.txt"
    - IP_ADDRESS=$(cat ${HOME}/ip.txt)
    - if [ -z "$IP_ADDRESS" ]; then IP_ADDRESS="35.241.233.187"; fi
    - eval $(ssh-agent -s)
    - echo "$TEAM5_PRIV_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking accept-new\n\n" > ~/.ssh/config
  script:
    - ssh $TEAM5_USER@$IP_ADDRESS "sudo systemctl stop phygital.service"
    - chmod +x dismantle.sh
    - sudo ./dismantle.sh

  when: manual




