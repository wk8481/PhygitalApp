# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
 
stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
 
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - build
  image: openjdk:17
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/*.jar



   
unit-test-job:   # This job runs in the test stage.
  image: openjdk:11
  stage: test    # It only starts when the job in the build stage completes successfully.
  tags:
    - test
  script:
    - bundle install
    - bundle exec rspec --format progress --format RspecJunitFormatter --out rspec.xml
  artifacts:
    when: always
    paths:
     - rspec.xml
    reports:
      junit: rspec.xml
 
check-files-job:  # This job runs in the test stage.
   stage: test
   image: alpine:latest
   script:
      - mkdir checkdir
      - find -name *.c > checkdir/testresult.txt 2>/dev/null
   artifacts:
        paths:
          - ./checkdir
 
integration_test:
  stage: test
  image: openjdk:11
  script:
    - ./gradlew integrationTest
 
code_quality:
  stage: test
  image: openjdk:11
  script:
    - ./gradlew check
 
dependency_check:
  stage: test
  image: openjdk:11
  script:
    - ./gradlew dependencyCheckAnalyze
 
deploy_to_cloud:  # This job runs in the deploy stage.
    stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
    image: google/cloud-sdk:alpine
    script:
        - echo "Deploying to gcloud..."